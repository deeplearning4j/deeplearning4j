/* ******************************************************************************
 *
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 *  See the NOTICE file distributed with this work for additional
 *  information regarding copyright ownership.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

//
// @author AbdelRauf
// Standardized template using partitioned type system
//

#include <ops/declarable/helpers/cpu/summaryReductions.hpp>
#include <system/op_boilerplate.h>
#include <loops/pairwise_instantiations.h>

#if NOT_EXCLUDED(OP_variance)

// Standardized generation using partitioned types
// This template generates instantiations for variance operations

namespace sd {
    namespace ops {
        namespace helpers {
            // Use the standardized combination system for double template instantiation
            ITERATE_COMBINATIONS(
                SD_COMMON_TYPES_PART_@COMB1@,
                SD_FLOAT_TYPES,
                BUILD_DOUBLE_TEMPLATE,
                variance_,
                (NDArray& input, NDArray& output, const std::vector<sd::LongType>& dimensions, bool biasCorrected);
            )
        }
    }
}

#endif
