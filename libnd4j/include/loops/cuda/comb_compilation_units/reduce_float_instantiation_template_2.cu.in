/* ******************************************************************************
 *
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 *  See the NOTICE file distributed with this work for additional
 *  information regarding copyright ownership.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

//
// Created by agibsonccc on 3/10/25.
//

#include <loops/cuda/reduce/reduce_float.chpp>
#include <system/type_boilerplate.h>
#include <loops/pairwise_instantiations_single.h>

/*
 * Function Instantiation:
 * ReduceFloatFunction::execReduce instantiated for types in @COMB1@, @COMB2@
 * Note: Using @COMB1@ for X type and @COMB2@ for Z type (2-type combinations)
 */

ITERATE_COMBINATIONS(
    SD_NUMERIC_TYPES_PART_@COMB1@,
    SD_FLOAT_TYPES_PART_@COMB2@,
    INSTANT_PROCESS_COMBINATION,
    functions::reduce::ReduceFloatFunction,
    ::execReduce(
        dim3 launchDims,
        cudaStream_t* stream,
        const int opNum,
        const void* x,
        const sd::LongType* dXShapeInfo,
        const sd::LongType* hXShapeInfo,
        void* extraParams,
        void* vreductionBuffer,
        void* z,
        const sd::LongType* dZShapeInfo,
        const sd::LongType* hZShapeInfo,
        const sd::LongType* dims);
);

ITERATE_COMBINATIONS(
    SD_NUMERIC_TYPES_PART_@COMB1@,
    SD_FLOAT_TYPES_PART_@COMB2@,
    INSTANT_PROCESS_COMBINATION,
    functions::reduce::ReduceFloatFunction,
    ::execReduceScalar(
        dim3 launchDims,
        cudaStream_t* stream,
        const int opNum,
        const void* x,
        const sd::LongType* xShapeInfo,
        const sd::LongType* hXShapeInfo,
        void* extraParams,
        void* z,
        const sd::LongType* dZShapeInfo,
        const sd::LongType* hZShapeInfo,
        sd::LongType* dimension,
        long long int dimensionLength,
        void* reductionBuffer,
        const sd::LongType* tadOnlyShapeInfo);
);
