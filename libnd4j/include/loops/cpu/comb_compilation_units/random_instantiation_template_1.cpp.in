/* ******************************************************************************
 *
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 *  See the NOTICE file distributed with this work for additional
 *  information regarding copyright ownership.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

//
// Created by agibsonccc on 1/3/25.
//

#include <loops/cpu/random.hpp>
#include <loops/pairwise_instantiations.h>
#include <system/type_boilerplate.h>

/*
 * Function Instantiation:
 * RandomFunction instantiated for float types in @COMB1@
 */

#define LIST_CALLBACK_EXEC_TRANSFORM_1(INPUT) \
    template void functions::random::RandomFunction<GET_SECOND(INPUT)>::execTransform( \
        int opNum, \
        sd::Pointer state, \
        const void *x, \
        const sd::LongType *xShapeInfo, \
        void *z, \
        const sd::LongType *zShapeInfo, \
        void *extraArguments);

ITERATE_LIST((SD_COMMON_TYPES_PART_@COMB1@), LIST_CALLBACK_EXEC_TRANSFORM_1)

#define LIST_CALLBACK_EXEC_TRANSFORM_2(INPUT) \
    template void functions::random::RandomFunction<GET_SECOND(INPUT)>::execTransform( \
        int opNum, \
        sd::Pointer state, \
        const void *x, \
        const sd::LongType *xShapeInfo, \
        const void *y, \
        const sd::LongType *yShapeInfo, \
        void *z, \
        const sd::LongType *zShapeInfo, \
        void *extraArguments);

ITERATE_LIST((SD_COMMON_TYPES_PART_@COMB1@), LIST_CALLBACK_EXEC_TRANSFORM_2)

#define LIST_CALLBACK_EXEC_TRANSFORM_3(INPUT) \
    template void functions::random::RandomFunction<GET_SECOND(INPUT)>::execTransform( \
        int opNum, \
        sd::Pointer state, \
        void *z, \
        const sd::LongType *zShapeInfo, \
        void *extraArguments);

ITERATE_LIST((SD_COMMON_TYPES_PART_@COMB1@), LIST_CALLBACK_EXEC_TRANSFORM_3)
