/* ******************************************************************************
*
*
* This program and the accompanying materials are made available under the
* terms of the Apache License, Version 2.0 which is available at
* https://www.apache.org/licenses/LICENSE-2.0.
*
*  See the NOTICE file distributed with this work for additional
*  information regarding copyright ownership.
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
* License for the specific language governing permissions and limitations
* under the License.
*
* SPDX-License-Identifier: Apache-2.0
******************************************************************************/

//
// Broadcast template instantiations
//

#include <loops/pairwise_instantiations.h>
#include <types/type_promote.h>
#include <loops/cpu/broadcasting.hpp>

/*
*
* Function Instantiation:
* Broadcast::exec instantiated for types in @COMB1@, @COMB2@, @COMB3@
*/

ITERATE_COMBINATIONS_3(
   SD_COMMON_TYPES_PART_@COMB1@,
   SD_COMMON_TYPES_PART_@COMB2@,
   SD_COMMON_TYPES_PART_@COMB3@,
   INSTANT_PROCESS_COMBINATION_3,
   functions::broadcast::Broadcast,
   ::exec(int opNum, const void *x, const sd::LongType *xShapeInfo, const void *y,
          const sd::LongType *yShapeInfo, void *z, const sd::LongType *zShapeInfo,
          sd::LongType *dimension, sd::LongType dimensionLength,
          const sd::LongType *tadOnlyShapeInfo, const sd::LongType *tadOffsets,
          const sd::LongType *tadOnlyShapeInfoZ, const sd::LongType *tadOffsetsZ,
          sd::LoopKind::Kind loopKind, sd::LongType start, sd::LongType stop)
)

/*
*
* Function Instantiation:
* Broadcast::exec (simple version) instantiated for types in @COMB1@, @COMB2@, @COMB3@
*/

ITERATE_COMBINATIONS_3(
   SD_COMMON_TYPES_PART_@COMB1@,
   SD_COMMON_TYPES_PART_@COMB2@,
   SD_COMMON_TYPES_PART_@COMB3@,
   INSTANT_PROCESS_COMBINATION_3,
   functions::broadcast::Broadcast,
   ::exec(int opNum, const void *x, const sd::LongType *xShapeInfo, const void *y,
          const sd::LongType *yShapeInfo, void *z, const sd::LongType *zShapeInfo)
)

/*
*
* Function Instantiation:
* Broadcast::execInverse instantiated for types in @COMB1@, @COMB2@, @COMB3@
*/

ITERATE_COMBINATIONS_3(
   SD_COMMON_TYPES_PART_@COMB1@,
   SD_COMMON_TYPES_PART_@COMB2@,
   SD_COMMON_TYPES_PART_@COMB3@,
   INSTANT_PROCESS_COMBINATION_3,
   functions::broadcast::Broadcast,
   ::execInverse(int opNum, const void *x, const sd::LongType *xShapeInfo, const void *y,
                 const sd::LongType *yShapeInfo, void *z, const sd::LongType *zShapeInfo,
                 sd::LongType *dimension, sd::LongType dimensionLength,
                 const sd::LongType *tadOnlyShapeInfo, const sd::LongType *tadOffsets,
                 const sd::LongType *tadOnlyShapeInfoZ, const sd::LongType *tadOffsetsZ,
                 sd::LongType start, sd::LongType stop)
)

/*
*
* Function Instantiation:
* BroadcastBool::exec instantiated for bool types
*/

template void functions::broadcast::BroadcastBool<bool, bool>::exec(
   int opNum, const void *x, const sd::LongType *xShapeInfo, const void *y,
   const sd::LongType *yShapeInfo, void *z, const sd::LongType *zShapeInfo,
   void *extraParams, sd::LongType *dimension, sd::LongType dimensionLength,
   const sd::LongType *tadOnlyShapeInfo, const sd::LongType *tadOffsets,
   const sd::LongType *tadOnlyShapeInfoZ, const sd::LongType *tadOffsetsZ,
   sd::LongType start, sd::LongType stop);