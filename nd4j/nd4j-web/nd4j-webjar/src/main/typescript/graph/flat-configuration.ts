// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Direction } from '../graph/direction.js';
import { ExecutionMode } from '../graph/execution-mode.js';
import { OutputMode } from '../graph/output-mode.js';
import { ProfilingMode } from '../graph/profiling-mode.js';


export class FlatConfiguration {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FlatConfiguration {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFlatConfiguration(bb:flatbuffers.ByteBuffer, obj?:FlatConfiguration):FlatConfiguration {
  return (obj || new FlatConfiguration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFlatConfiguration(bb:flatbuffers.ByteBuffer, obj?:FlatConfiguration):FlatConfiguration {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FlatConfiguration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

executionMode():ExecutionMode {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ExecutionMode.SEQUENTIAL;
}

profilingMode():ProfilingMode {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ProfilingMode.NONE;
}

outputMode():OutputMode {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : OutputMode.IMPLICIT;
}

timestats():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

footprintForward():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

footprintBackward():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

direction():Direction {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : Direction.FORWARD_ONLY;
}

static startFlatConfiguration(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addId(builder:flatbuffers.Builder, id:bigint) {
  builder.addFieldInt64(0, id, BigInt('0'));
}

static addExecutionMode(builder:flatbuffers.Builder, executionMode:ExecutionMode) {
  builder.addFieldInt8(1, executionMode, ExecutionMode.SEQUENTIAL);
}

static addProfilingMode(builder:flatbuffers.Builder, profilingMode:ProfilingMode) {
  builder.addFieldInt8(2, profilingMode, ProfilingMode.NONE);
}

static addOutputMode(builder:flatbuffers.Builder, outputMode:OutputMode) {
  builder.addFieldInt8(3, outputMode, OutputMode.IMPLICIT);
}

static addTimestats(builder:flatbuffers.Builder, timestats:boolean) {
  builder.addFieldInt8(4, +timestats, +false);
}

static addFootprintForward(builder:flatbuffers.Builder, footprintForward:bigint) {
  builder.addFieldInt64(5, footprintForward, BigInt('0'));
}

static addFootprintBackward(builder:flatbuffers.Builder, footprintBackward:bigint) {
  builder.addFieldInt64(6, footprintBackward, BigInt('0'));
}

static addDirection(builder:flatbuffers.Builder, direction:Direction) {
  builder.addFieldInt8(7, direction, Direction.FORWARD_ONLY);
}

static endFlatConfiguration(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishFlatConfigurationBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedFlatConfigurationBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createFlatConfiguration(builder:flatbuffers.Builder, id:bigint, executionMode:ExecutionMode, profilingMode:ProfilingMode, outputMode:OutputMode, timestats:boolean, footprintForward:bigint, footprintBackward:bigint, direction:Direction):flatbuffers.Offset {
  FlatConfiguration.startFlatConfiguration(builder);
  FlatConfiguration.addId(builder, id);
  FlatConfiguration.addExecutionMode(builder, executionMode);
  FlatConfiguration.addProfilingMode(builder, profilingMode);
  FlatConfiguration.addOutputMode(builder, outputMode);
  FlatConfiguration.addTimestats(builder, timestats);
  FlatConfiguration.addFootprintForward(builder, footprintForward);
  FlatConfiguration.addFootprintBackward(builder, footprintBackward);
  FlatConfiguration.addDirection(builder, direction);
  return FlatConfiguration.endFlatConfiguration(builder);
}
}
